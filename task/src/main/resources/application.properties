spring.application.name=task
spring.datasource.url=jdbc:postgresql://localhost:5432/hivel3?currentSchema=public,batch_meta
spring.datasource.username=postgres
spring.datasource.password=2210030187
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgres
spring.datasource.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# make sure multipart is enabled and size is reasonable
# Multipart configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Spring Batch initialization
spring.batch.initialize-schema=never   # We already created tables manually
spring.batch.schema=classpath:org/springframework/batch/core/schema-postgresql.sql

# Important: Tell Spring Batch to use the 'batch_meta' schema
spring.batch.jdbc.schema=batch_meta
# optional: clearer error traces during testing
server.error.include-message=always
server.error.include-binding-errors=always
# Enable detailed Spring Cache and Redis operation logs
logging.level.org.springframework.cache=DEBUG
logging.level.org.springframework.cache.interceptor=DEBUG
logging.level.org.springframework.cache.redis=DEBUG
logging.level.org.springframework.data.redis=DEBUG
management.endpoints.web.exposure.include=health,metrics,info
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.metrics.enable.cache = true
app.jwt.secret=ReplaceThisWithAStrongRandomSecretAtLeast32CharsLong
app.jwt.exp-min=60




